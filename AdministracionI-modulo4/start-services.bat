@echo off
REM Script para iniciar todos los servicios de la arquitectura de microservicios
REM Administraci√≥n I - M√≥dulo 4

echo üöÄ Iniciando Arquitectura de Microservicios - Sistema de Administraci√≥n
echo =================================================================

REM Directorio base
set BASE_DIR=d:\Modulo-4\AdministracionI-modulo4

REM Verificar si Node.js est√° instalado
node --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Node.js no est√° instalado
    pause
    exit /b 1
)

REM Verificar si PHP est√° instalado
php --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå PHP no est√° instalado
    pause
    exit /b 1
)

echo ‚úÖ Dependencias verificadas

REM 1. Instalar dependencias de GraphQL Gateway si no existen
if not exist "%BASE_DIR%\graphql-gateway\node_modules" (
    echo üì¶ Instalando dependencias de GraphQL Gateway...
    cd /d "%BASE_DIR%\graphql-gateway"
    call npm install
)

REM 2. Instalar dependencias de WebSocket Service si no existen
if not exist "%BASE_DIR%\websocket-service\node_modules" (
    echo üì¶ Instalando dependencias de WebSocket Service...
    cd /d "%BASE_DIR%\websocket-service"
    call npm install
)

REM 3. Compilar TypeScript
echo üî® Compilando servicios TypeScript...
cd /d "%BASE_DIR%\graphql-gateway"
call npm run build

cd /d "%BASE_DIR%\websocket-service"
call npm run build

REM 4. Iniciar Laravel API
echo üî• Iniciando Laravel API en puerto 8000...
start "Laravel API" cmd /k "cd /d %BASE_DIR% && php artisan serve --host=0.0.0.0 --port=8000"
timeout /t 3 /nobreak >nul

REM 5. Iniciar WebSocket Service
echo üì° Iniciando WebSocket Service en puerto 3001...
start "WebSocket Service" cmd /k "cd /d %BASE_DIR%\websocket-service && npm run dev"
timeout /t 3 /nobreak >nul

REM 6. Iniciar GraphQL Gateway
echo üåê Iniciando GraphQL Gateway en puerto 4000...
start "GraphQL Gateway" cmd /k "cd /d %BASE_DIR%\graphql-gateway && npm run dev"
timeout /t 3 /nobreak >nul

REM 7. Iniciar Dashboard PHP
echo üìä Iniciando Dashboard PHP en puerto 3000...
start "Dashboard PHP" cmd /k "cd /d %BASE_DIR%\dashboard && php -S localhost:3000 server.php"
timeout /t 3 /nobreak >nul

echo.
echo üéâ Todos los servicios han sido iniciados!
echo =================================================================
echo üìã URLs de acceso:
echo    ‚Ä¢ Laravel API:      http://localhost:8000
echo    ‚Ä¢ WebSocket Service: http://localhost:3001
echo    ‚Ä¢ GraphQL Gateway:   http://localhost:4000/graphql
echo    ‚Ä¢ Dashboard:         http://localhost:3000
echo.
echo üìñ Documentaci√≥n GraphQL: http://localhost:4000/graphql
echo üîç Health Checks:
echo    ‚Ä¢ Laravel:    http://localhost:8000/api/health
echo    ‚Ä¢ WebSocket:  http://localhost:3001/health  
echo    ‚Ä¢ GraphQL:    http://localhost:4000/health
echo    ‚Ä¢ Dashboard:  http://localhost:3000/api/system-info
echo.
echo ‚ö° Para probar notificaciones en tiempo real:
echo    1. Abre el Dashboard en tu navegador
echo    2. Realiza operaciones CRUD via GraphQL o Laravel API
echo    3. Observa las notificaciones en tiempo real en el Dashboard
echo.
echo üõë Para detener todos los servicios, cierra las ventanas de comandos
echo.
pause
